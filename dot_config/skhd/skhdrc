# A list of all built-in modifier and literal keywords can be found at <https://github.com/koekeishiya/skhd/issues/1>
#
# To specify a NOP, use "true" or ":"
# To pass through a keypress to an application, use the format `"PROCESS_NAME" ~`, e.g. `"terminal" ~`

# prevent skhd from monitoring events for specific applications.
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

# h: (H)ide active window
meh - h [
    "code"  :   osascript -e 'tell application "System Events" to set visible of application process "Code" to false'
    "kitty" :   osascript -e 'tell application "System Events" to set visible of application process "kitty" to false'
    *       :   skhd -k "cmd - h"
]

# Remap alt+` and alt+shift+` on vscode [kVK_Grave == 0x32]
#
# Using native tabs instead of separate windows, alt+` is useless because I have
# only have a single vscode window. I have "Show Next Window Tab" mapped to Ctrl+`
# in vscode, so to have consistent muscle memory across apps I remap alt+` here.
#
# FIXME: this doesn't seem to work reliably - I think Contexts is intercepting the key events first
alt - 0x32 [
    "code"  :   skhd -k "ctrl - 0x32"
    *       ~
]
alt + shift - 0x32 [
    "code"  :   skhd -k "ctrl + shift - 0x32"
    *       ~
]

#
# map ctrl chords to equivalent/similar cmd chords
#

ctrl - backspace : skhd -k "alt - backspace" # map ctrl+backspace to "delete word left"

shift + ctrl - a [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - a"
]
ctrl - c [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - c"
]
shift + ctrl - f [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - f"
]
shift + ctrl - h [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - h"
]
ctrl - l [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - l"
]
ctrl + shift - l [
    "Google Chrome"     :   skhd -k "cmd + shift - a"
    "Microsoft Edge"    :   skhd -k "cmd + shift - a"
    *           ~
]
ctrl - m [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - m"
]
ctrl + shift - n [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - n"
]
ctrl - q [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - q"
]
ctrl - r [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - r"
]
ctrl - s [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - s"
]
ctrl - t [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - t"
]
shift + ctrl - t [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "shift + cmd - t"
]
ctrl - v [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - v"
]
ctrl - x [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - x"
]
ctrl - w [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - w"
]
ctrl - y [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - v"
]
ctrl - z [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - z"
]
# (kVK_Comma = 0x2B)
ctrl - 0x2B [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - 0x2B"
]
# [ (0x21)
ctrl - 0x21 [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - 0x21"
]
# ctrl+[ (0x1E) to go forwards
ctrl - 0x1E [
    "code"  ~
    "kitty" ~
    "zed"   ~
    *       :   skhd -k "cmd - 0x1E"
]
