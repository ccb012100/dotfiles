## aliases
[alias]
    ## add
    af  = ! git --no-pager ls-files --modified --others --exclude-standard | fzf -m | xargs --no-run-if-empty git add # add files interactively
    au  = ! git add --update && git status --short

    ## branch
    b       = branch
    bd      = branch --delete
    bdf     = branch --delete --force
    bdz     = ! git branch | fzf -m | xargs --no-run-if-empty git branch --delete # delete branch(es) with fzf
    bdfz    = ! git branch | fzf -m | xargs --no-run-if-empty git branch --delete --force # force delete branch(es) with fzf
    bl      = branch --list
    bv      = branch -v
    br      = branch --remote
    brv     = branch --remote -v
    delete  = delete-merged-branches    # <https://github.com/hartwork/git-delete-merged-branches>
    swc     = switch --create           # create new branch and switch to it

    ## checkout
    back    = switch - # checkout previous branch
    co      = checkout
    cof     = ! git --no-pager branch | fzf | xargs --no-run-if-empty git checkout # checkout local branch
    corf    = ! git --no-pager branch --remote | fzf | sed 's_^origin/__g' | xargs --no-run-if-empty git checkout # checkout remote branch
    main    = checkout main
    master  = checkout master

    ## cherry-pick
    cherry  = cherry-pick
    cp      = cherry-pick
    pick    = cherry-pick

    ## commit
    amend   = commit --amend
    c       = commit
    ca      = commit --amend
    call    = commit --all
    can     = ca --no-edit
    cm      = commit -m
    cnv     = c --no-verify
    contrib = shortlog -s
    date    = commit --amend --no-edit --date=now
    fix     = commit --fixup
    fixup   = commit --fixup
    now     = commit --amend --no-edit --date=now

    ## diff
    d   = diff
    dm  = diff main..
    dom = diff origin/main..
    ds  = diff --staged
    dt  = difftool
    dts = difftool --staged

    ## fetch
    f   = fetch --all --verbose
    fm  = fetch --verbose origin main:main # update local main branch to match origin

    ## forgit
    ja      = forgit add
    jbd     = forgit branch_delete
    jc      = forgit checkout_commit
    jcp     = forgit cherry_pick
    jco     = forgit checkout_file
    jl      = forgit log
    jpick   = forgit cherry_pick
    jstl    = forgit stash_show
    jstp    = forgit stash_push

    ## log
    lc  = log --compact-summary         # show files changed
    lfp = log --first-parent
    ll  = log --compact-summary         # show files changed
    lm  = log --merges
    lnm = log --no-merges
    lp  = log --patch                   # same as -p or -u
    lpc = log --patch --compact-summary # show diffs
    ls  = ls-files
    lu  = log -u                        # same as -p or --patch

    ## merge
    m   = merge
    ma  = merge --abort
    mc  = merge --continue
    mt  = mergetool

    ## pull
    p   = pull
    pa  = pull --autostash
    pr  = pull --rebase
    pra = pull --rebase --autostash

    ## push
    ps      = push
    psf     = push -v --force-with-lease
    psnv    = push -v --no-verify # bypass pre-push hook
    publish = push -v --set-upstream origin HEAD

    ## rebase
    r           = rebase
    ra          = rebase --abort
    rc          = rebase --continue
    remain      = ! git fetch origin main:main && git rebase --interactive origin/main
    remaster    = ! git fetch origin master:master && git rebase --interactive origin/master
    reorigin    = ! git fetch origin master:master && git rebase --interactive origin/`git branch --show-current`
    ri          = rebase --interactive

    ## reset
    rt  = reset
    rtm = reset --mixed
    rts = reset --soft
    rth = reset --hard

    ## stash
    checkpoint  = !git stash push --include-untracked && git stash apply # stash changes but keep them in staging area
    pop         = stash pop
    stc         = checkpoint
    stsp        = stash show -p
    stl         = stash list
    stps        = stash push --include-untracked # *not* stash push --all, which includes ignored files

    ## status
    s   = ss
    sl  = status --long
    ss  = status --short
    ssb = status --short --branch
    sv  = svv
    svv = status -vv

    ## switch
    sw  = switch
    cb  = switch --create # (c)reate (b)ranch

    ## tag
    current-tags    = tag --list --points-at HEAD
    t               = current-tags

    ## worktree
    w   = worktree
    wl  = worktree list
    wa  = worktree add
    wm  = worktree move
    wp  = worktree prune
    wr  = worktree remove

    ## misc
    chx     = update-index --chmod=+x
    clg     = config list --global
    difft   = difftool --tool=difftastic
    fg      = forgit
    nuke    = clean -fdx
    sbs     = ! DELTA_FEATURES=sbs git # use delta in side-by-side mode
